@model IEnumerable<FSO.Models.EventType>

@{
    ViewData["Title"] = "Kategorie";
}

<center><h3 class="display-6">Rodzaje wydarzeń</h3></center>

    @if (User.IsInRole("Admin"))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Operacje szczegółów nie są dostępne.</strong> Przejście na podstronę zwraca Access Denied. Brak tylu detali dla tabeli, aby było to przydatne. Opcja została na potrzeby ewentualnych zmian w strukturze bez konieczności odbudowywania kontrolera.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
<div class="alert alert-info alert-dismissible fade show" role="alert">
    Zalecamy przemyślane podejście do nowych kategorii. Nie zalecamy korzystania z nazw, które wykorzystamy tylko raz. Podejście rozważne zachowa porządek.
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>

<p>
    <a class="btn btn-primary" asp-action="Create">Utwórz nową kategorię</a>
</p>
<table class="table table-striped table-hover table-bordered">
    <thead class="custom-header">
        <tr>
            <th>
                Nazwa
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
        </tr>
}
    </tbody>
</table>
