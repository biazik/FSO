@model FSO.Models.EventView

@{
    ViewData["Title"] = "Utwórz";
}
<h1>Utwórz nowe wydarzenie</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Event.Name" class="control-label"></label>
                <input asp-for="Event.Name" class="form-control" />
                <span asp-validation-for="Event.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.Description" class="control-label"></label>
                <input asp-for="Event.Description" class="form-control" />
                <span asp-validation-for="Event.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.isPublic" class="control-label"></label>
                <div>
                    <input type="radio" asp-for="Event.isPublic" value="true" id="isPublicTrue" />
                    <label for="isPublicTrue">Publiczne</label>
                </div>
                <div>
                    <input type="radio" default asp-for="Event.isPublic" value="false" id="isPublicFalse" />
                    <label for="isPublicFalse">Prywatne</label>
                </div>
                <span asp-validation-for="Event.isPublic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.EventTypeId" class="control-label">Rodzaj wydarzenia</label>
                <select asp-for="Event.EventTypeId" class ="form-control" asp-items="ViewBag.EventTypeId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Event.LocationId" class="control-label">Lokalizacja</label>
                <select asp-for="Event.LocationId" class ="form-control" asp-items="ViewBag.LocationId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Event.Start" class="control-label"></label>
                <input asp-for="Event.Start" class="form-control" id="start" />
                <span asp-validation-for="Event.Start" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.End" class="control-label"></label>
                <input asp-for="Event.End" class="form-control" id="end" />
                <span asp-validation-for="Event.End" class="text-danger"></span>
            </div>
            <div class="form-group">
            <label>Tags</label>
                <select asp-for="SelectedTagIds" class="form-control" multiple="multiple">
                    @foreach (var tag in Model.AvailableTags)
                    {
                        <option value="@tag.Id">@tag.Name</option>
                    }
                </select>
            </div>
            </br>
            <div class="form-group">
                <input type="submit" value="Utwórz wydarzenie" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<script>
    // Dodanie value do inputa od dat wydarzeń
    function toDateTimeLocalString(date) {
        const pad = (n) => (n < 10 ? '0' + n : n); // poprawka formatu dla jednocyfrowych dni
        return (
            date.getFullYear() +
            '-' +
            pad(date.getMonth() + 1) +
            '-' +
            pad(date.getDate()) +
            'T' +
            pad(date.getHours()) +
            ':00'
        );
    }
    const now = new Date();
    document.getElementById('start').value = toDateTimeLocalString(now);

    const oneDayLater = new Date(now);
    oneDayLater.setDate(now.getDate() + 1);
    document.getElementById('end').value = toDateTimeLocalString(oneDayLater);
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
