@model IEnumerable<FSO.Models.Participants>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Preferencje";
}

<h1>Preferencje</h1>

@if (User.IsInRole("Admin"))
{
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>Operacje na stronie zostały zablokowane!</strong> Obecnie dostępny jest tylko podgląd, przejście na podstrony zwraca Access Denied, jest to spowodowane tym, że to <strong>tabela pomocnicza</strong> stąd nie jest przewidziana edycja. Opcje zostały na potrzeby ewentualnych zmian w strukturze bez konieczności odbudowywania kontrolera.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}
<table class="table table-striped table-hover table-bordered">
    <thead class="custom-header">
        <tr>
            <th>
                Wydarzenie
            </th>
            @if (User.IsInRole("Admin"))
            {
                <th>
                    Konto
                </th>
            }
            <th>
                Wybór
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var user = (ViewData["Users"] as List<IdentityUser>)?.FirstOrDefault(u => u.Id == item.UserId.ToString());
            string Status = item.Status switch
            {
                2 => "Będę (+2)",
                1 => "Lubię (+1)",
                -1 => "Nie lubię (-1)"
            };
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Event.Name)
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        @user.Email
                    </td>
                }
                <td>
                    @Status
                </td>
            </tr>
        }
    </tbody>
</table>
